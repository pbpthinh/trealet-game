version: '3.8'
services:
    
    # Application
    app:
        build:
            context: .
            dockerfile: ./development/app.dockerfile
        volumes:
            - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini
            - /home/devops/trealet/upload:/var/www/html/public/upload/trealet-data/
            # - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini
        ports:
            - 9000:9000
    # Web Server
    web:
        build:
            context: .
            dockerfile: ./development/web.dockerfile
        volumes:
            - /home/devops/trealet/ssl/:/etc/nginx/ssl/trealet.com/
            - /home/devops/trealet/upload:/var/www/html/public/upload/trealet-data/
        depends_on:
            - "app"
        ports:
            # - 80:80
            - 443:443
volumes:
    uploaddata:
    # # Database
    # database:
    #     image: mysql:8.0
    #     volumes:
    #         - dbdata:/var/lib/mysql
    #     environment:
    #         MYSQL_DATABASE: ${DB_DATABASE}
    #         MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
    #         MYSQL_PASSWORD: ${DB_PASSWORD}
    #         MYSQL_USER: ${DB_USERNAME}
    #     ports:
    #         - "33061:3306"
    # # Database management
    # pma:
    #     image: phpmyadmin:5.1
    #     environment:
    #         - PMA_ARBITRARY=1
    #         - PMA_HOST=${DB_HOST}
    #         - PMA_USER=${DB_USERNAME}
    #         - PMA_PASSWORD=${DB_PASSWORD}
    #         - PMA_PORT=${DB_PORT}
    #     depends_on:
    #         - database
    #     ports:
    #         - 8888:80
    # # Mailing Server
    # mailhog:
    #     image: mailhog/mailhog
    #     logging:
    #         driver: 'none'
    #     ports:
    #         - 1025:1025 
    #         - 8025:8025 
#     app_http:
#         build:
#             context: ./
#         volumes:
#         # #   - .:/var/www/html
#         # #   - .env.prod:/var/www/html/.env
#         # #   - /home/devops/trealet/ssl/:/etc/nginx/ssl/trealet.com/
#             - uploaddata:/var/www/html/public/upload/trealet-data/
#         ports:
#             - "80:80"
#         environment:
#             - APP_ENV=local
#             - APP_DEBUG=true

# volumes:
#     uploaddata: